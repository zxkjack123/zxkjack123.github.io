<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[使用PyNE制作材料库]]></title>
      <url>/neutronics/neutronics/make-pyne-material-lib/</url>
      <content type="html"><![CDATA[<p>在使用DAGMC进行输运计算的时候，其几何文件中，已经通过trelis定义了材料名称和密度，但并没有定义这些材料的具体组成成分。在进行计算之前，需要制作相应的材料数据库，把材料数据写入到h5文件中，再跟几何文件整合起来。这样，DAGMC就知道这个栅元的材料成分了。</p>
<p>针对不同的问题规模，可以采用不同的形式来制作材料库。比如简单的问题，只需要几种不复杂的材料时，我们可以直接在python脚本内编辑材料成分，然后写入材料库。对于涉及材料比较多的问题，可以通过提前准备材料数据库文件（即将各种材料以一定格式提前保存在电脑中，再通过python脚本读取材料文件格式化的制作材料数据库）。或者直接提前准备包含自己会用到的h5材料数据库。</p>
<h2 id="简单数据库制作"><a href="#简单数据库制作" class="headerlink" title="简单数据库制作"></a>简单数据库制作</h2><p>对于几何简单，涉及材料较少(少于5个材料)的计算任务，直接在python脚本中调用pyne的材料库写就行了。</p>
<p>定义材料时，我们需要制定材料的以下信息：</p>
<ol>
<li>名称：和trelis中group name对应的字符串</li>
<li>密度：材料密度</li>
<li>核素组成：材料的具体成分</li>
</ol>
<p>我们可以用多种方式来定义材料的组成成分，详细说明可以参考<a href="http://pyne.io/tutorial/02.html" target="_blank" rel="noopener">官方文档</a>。比如下面三种常用方式：</p>
<ol>
<li>通过核素的核子密度比例(atom fraction)，可以不归一化</li>
<li>通过核素的质量份额(mass fraction)，可以不归一化</li>
<li>通过元素的质量份额，然后expand元素</li>
</ol>
<p>比如下面的文件定义了<strong>Water</strong>，<strong>BoronCarbide</strong>和<strong>Steel</strong>三种材料并将材料写入到材料库<strong>example_material_lib.h5</strong>中。</p>
<pre><code class="python">#!/usr/bin/python
#
from pyne.material import Material, MaterialLibrary

print &quot;Welcome!&quot;
mat_lib = MaterialLibrary()

# define a simple water since O-18 not in mcnp xs libs
watervec = {10010:2,80160:1} # simple water
water = Material()
water.density = 1.0
water.from_atom_frac(watervec)

# define b4c
b4c = Material()
b4c.from_atom_frac({&#39;B&#39;:4,&#39;C&#39;:1})
b4c.density = 2.54
b4c = b4c.expand_elements()

# define steel
steel = Material({&#39;Fe&#39;:0.655,&#39;Cr&#39;:0.170,&#39;Ni&#39;:0.120,&#39;Mo&#39;: 0.025,&#39;Mn&#39;: 0.02, &#39;Si&#39;:.01},density=7.92)
steel = steel.expand_elements()

# put materials into mat_lib
mat_lib[&quot;Water&quot;] = water
mat_lib[&quot;BoronCarbide&quot;] = b4c
mat_lib[&quot;Steel&quot;] = steel

# write into hdf5 file
mat_lib.write_hdf5(&quot;example_material_lib.h5&quot;)
#
print &quot;All done!&quot;
</code></pre>
<p>此例子中，定义<strong>Water</strong>时用材料的核素个数比例来定义的材料。在定义<strong>BoronCarbide</strong>时使用材料的元素比例来定义。在定义<strong>Steel</strong>时使用的材料的元素质量份额来定义。</p>
<h2 id="格式化数据库制作"><a href="#格式化数据库制作" class="headerlink" title="格式化数据库制作"></a>格式化数据库制作</h2><p>对于涉及材料比较多，材料成分比较复杂的模型，直接用python脚本来定义每种材料就会非常麻烦了，而且不利于材料的更新，维护与阅读。</p>
<p>对于原本是使用其他蒙特卡罗软件的人，可能已经为其使用的软件准备了一套材料数据库，要是让他们再为其他软件单独准备一套数据库，工作量又大，又容易出错。这时使用脚本将其他格式的材料转换为pyne的材料定义方式是更好的选择。</p>
<p>因此，格式化数据库制作的过程，就是指将原本以其他媒介（如excel, 文本文件，hdf5文件等）以其他格式（如成分表格，MCNP格式等）存放的材料信息转化为pyne识别的，可以用于DAGMC计算的材料数据库的过程。</p>
<p>万变不离其宗，不论是什么媒介什么格式的方式，都是通过读取材料的名称，密度和材料组成成分进而根据pyne的格式来定义材料数据库。</p>
]]></content>
      
        <categories>
            
            <category> neutronics </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PyNE </tag>
            
            <tag> material </tag>
            
            <tag> library </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Trelis, DAGMC和PyNE计算停机计量的例子]]></title>
      <url>/neutronics/neutronics/sample-trelis-dagmc-pyne-r2s-workflow/</url>
      <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>本篇文章使用例子来说明使用Trelis, DAGMC和PyNE计算停机剂量率的流程。<br>本流程需要提前安装Trelis, DAGMC和PyNE。</p>
<h2 id="例子的重要性"><a href="#例子的重要性" class="headerlink" title="例子的重要性"></a>例子的重要性</h2><p>使用的工具功能越多，那么使用起来一般就越复杂，新手就越难上手，新手总会在各种环节出现各种开发者意想不到的困难。即便软件官网上介绍了软件的各个工具的使用方法，但如果没有一个生动的例子来把这些应用工具的使用方法串起来的话，还是非常难的。</p>
<p>我自己作为一个PyNE系统的使用者，现在也参与了其中的部分开发工作，对此深有体会。对于新手的教学，告诉他们这个软件的各种功能是远远不够的，必须辅以实例，手把手的教会他们怎么用这个功能。用例子来说明这些问题是比较容易让新手接受的。我作为一个PyNE的使用者，也是一个新手。</p>
<p>这篇文章介绍了我如何从Trelis开始，一步一步实现计算一个简单模型的停机计量的过程的。</p>
<h2 id="例题描述"><a href="#例题描述" class="headerlink" title="例题描述"></a>例题描述</h2><p>现有如下形状的几何体：<br><img src="https://i.imgur.com/BqeUfka.png" alt="test_case1"><br>图中每个小快代表着$ 10 \times 10 \times 10 \, \mathrm{cm}^3$的立方体。简单起见，我们把栅元1和3的材料设为密度为$1.0 \, \mathrm{g/cm^3}$的水(Water)，栅元2的材料设为密度为$7.8 \, \mathrm{g/cm^3}$的不锈钢(Stainless Steel)。除了这几个栅元外其它区域都是真空。栅元1的正中心有一个点中子源，各项同性的发射能量为14 MeV的中子。</p>
<p>让点中子源以$10^{10}$个中子每秒的中子发射率辐照这几个栅元1年，然后停止辐照，考察停止辐照后1小时的栅元1, 2, 3的停机剂量率。</p>
<h2 id="输入文件准备"><a href="#输入文件准备" class="headerlink" title="输入文件准备"></a>输入文件准备</h2><p>要进行蒙特卡罗输运计算，我们需要提供以下信息：</p>
<ol>
<li>几何信息，包括栅元和曲面。</li>
<li>材料信息。每个区域（栅元）是什么材料（材料的组成份额）</li>
<li>中子源信息。</li>
<li>Tally信息。想统计的东西</li>
<li>其他信息。如截断卡，权重及权窗，计算终止条件等。</li>
</ol>
<p>与普通MCNP计算不同，使用DAGMC计算时这些信息并不是全部都由一个输入文件提供，而是分别通过不同的文件提供。一个加载了几何和材料信息的h5m文件提供几何和材料信息。而其他信息则通过另一个input文本文件提供。</p>
<h3 id="Trelis建模"><a href="#Trelis建模" class="headerlink" title="Trelis建模"></a>Trelis建模</h3><h4 id="几何体的建立"><a href="#几何体的建立" class="headerlink" title="几何体的建立"></a>几何体的建立</h4><p>使用Trelis建立3个立方体，并在立方体外围设置一个graveyard区域，所有到达graveyard区域的中子将被杀死。graveyard的设置可以参考DAGMC关于<a href="https://svalinn.github.io/DAGMC/usersguide/codes/dag-mcnp.html?highlight=graveyard" target="_blank" rel="noopener">graveyard的官方说明</a>。<br><img src="https://i.imgur.com/WLozRdH.png" alt="test_case1_model"><br>上图所示的三个小立方体块而就是我们建立的几个栅元，外面一个稍大的立方体薄壳就是我们想要的graveyard。<br>几何体分别标记为：</p>
<ol>
<li>蓝色小立方体，cell 1， trelis vol id: 1, 材料为密度为1的水，材料号设定为1</li>
<li>黄色小立方体，cell 2, trelis vol id: 2, 材料为密度为7.8的铁，材料号设定为2</li>
<li>红色小立方体块，cell 3, trelis vol id: 3， 材料为密度为1的水，材料号设定为1</li>
<li>黄色大立方体薄壳，graveyard, trelis vol id: 8</li>
</ol>
<h4 id="分组并赋材料"><a href="#分组并赋材料" class="headerlink" title="分组并赋材料"></a>分组并赋材料</h4><p>几何体设置好了之后，对这几个栅元进行分组并赋材料。<br>在trelis界面输入下面命令：</p>
<pre><code>trelis&gt; group &quot;mat:Water/rho:1.0&quot; add vol 1 3
trelis&gt; group &quot;mat:Stainless Steel/rho:7.8&quot; add vol 2
</code></pre><p><strong>备注1</strong>：’trelis&gt;’代表该命令是在trelis窗口中执行。<br><strong>备注2</strong>：这里使用的材料名必须在PyNE的材料库中存在才可以。可以使用</p>
<pre><code class="bash">
$ strings $HOME/.local/lib/python2.7/site-packages/pyne/nuc_data.h5 | grep name
</code></pre>
<p>来查看材料库中有哪些材料。使用两次grep可以用来搜索相关材料，比如查看材料库中有哪些”Steel”可供选择:</p>
<pre><code class="bash">$ strings $HOME/.local/lib/python2.7/site-packages/pyne/nuc_data.h5 | grep name | grep &quot;Steel&quot;
</code></pre>
<h4 id="设置问题边界"><a href="#设置问题边界" class="headerlink" title="设置问题边界"></a>设置问题边界</h4><p>边界包括终止边界和反射边界等。终止边界指的是我们不关心的区域，中子进入到终止边界后就会被杀死，这和MCNP中<em>imp=0</em>的区域相似。反射边界就是反射面，中子到达反射面后会被反射回去，在对称几何中很常用。</p>
<h5 id="终止边界：graveyard"><a href="#终止边界：graveyard" class="headerlink" title="终止边界：graveyard"></a>终止边界：graveyard</h5><p>终止边界的设置实际上是通过对这个区域设置特殊材料实现的。比如此例题中需要将8号volume (可以简写为vol)设置为graveyard,可以使用下面命令进行设置：</p>
<pre><code>trelis&gt; group &quot;mat:Graveyard&quot; add volume 8
</code></pre><h5 id="反射边界"><a href="#反射边界" class="headerlink" title="反射边界"></a>反射边界</h5><p>反射边界是通过指定反射面的方式来设置的。与volume类似，我们可以把一些面加入到一个group，然后将这个group设置为反射面即可。反射面属性的设置也是通过把group名字设置为特殊字符串的方式实现。<br>比如将10, 11号曲面设置为反射面，可以通过下面的命令：</p>
<pre><code>trelis&gt; group &quot;boundary:Reflecting&quot; add surf 10 11
</code></pre><p>本例题中不需要将任何曲面设置为反射面。</p>
<h4 id="imprint-amp-merge"><a href="#imprint-amp-merge" class="headerlink" title="imprint &amp; merge"></a>imprint &amp; merge</h4><p>Imprint和merge是trelis中处理曲面的两个操作，他们的作用包括合并重合曲面和将无穷大的曲面根据几何体分割为总多的小的facet。功能说明可以参考<a href="https://svalinn.github.io/DAGMC/usersguide/trelis_basics.html" target="_blank" rel="noopener">trelis imprint and merge说明</a>。</p>
<p>我们需要做的是，在trelis界面执行下面的操作：</p>
<pre><code>trelis&gt; imprint body all
trelis&gt; merge all
</code></pre><h4 id="导出几何文件"><a href="#导出几何文件" class="headerlink" title="导出几何文件"></a>导出几何文件</h4><p>安装了DAGMC插件的trelis可以使用内置命令到处几何文件，使用方法可以通过下面命令查看帮助信息：</p>
<pre><code>trelis&gt; help dagmc
</code></pre><p>也可以参考<a href="https://svalinn.github.io/DAGMC/usersguide/codes/dag-mcnp.html" target="_blank" rel="noopener">官方文档</a>。</p>
<p>对于本例题，我们可以在trelis中执行下面命令将几何信息存放到”geometry1.h5m”中：</p>
<pre><code>trelis&gt; export dagmc geometry1.h5m
</code></pre><p>至此，我们完成了几何文件的制作。</p>
<p><strong>注意：在没有设置trelis默认导出文件路径的情况下，此时生成的”geometry1.h5m”文件并不一定在当前文件夹，可能存放于$HOME/Documents中，也可能在其他常用默认文件夹中</strong></p>
<h3 id="制作材料"><a href="#制作材料" class="headerlink" title="制作材料"></a>制作材料</h3><p>按照UWUW流程制作材料，使用UWUW_preprocessor：</p>
<pre><code class="bash">$ uwuw_preproc &lt;dagmc h5m filename&gt; -v -l &lt;path to nuclear data library&gt;
</code></pre>
<p>对于本例题：</p>
<pre><code class="bash">$ uwuw_preproc geometry1.h5m -l \
      $HOME/.local/lib/python2.7/site-packages/pyne/nuc_data.h5
</code></pre>
<p>输出提示信息：</p>
<pre><code>Loading file geometry1.h5m
Initializing the GeomQueryTool...
Using faceting tolerance: 0.001
Implicit Complement assumed to be Vacuum
material Stainless Steel was not found in the material library
</code></pre><h3 id="整合几何与材料"><a href="#整合几何与材料" class="headerlink" title="整合几何与材料"></a>整合几何与材料</h3><h3 id="DAGMC-input文件准备"><a href="#DAGMC-input文件准备" class="headerlink" title="DAGMC input文件准备"></a>DAGMC input文件准备</h3><h2 id="中子输运计算"><a href="#中子输运计算" class="headerlink" title="中子输运计算"></a>中子输运计算</h2><h2 id="活化计算"><a href="#活化计算" class="headerlink" title="活化计算"></a>活化计算</h2><h2 id="光子输运计算"><a href="#光子输运计算" class="headerlink" title="光子输运计算"></a>光子输运计算</h2><h2 id="结果绘图"><a href="#结果绘图" class="headerlink" title="结果绘图"></a>结果绘图</h2><p>未完待续……</p>
]]></content>
      
        <categories>
            
            <category> neutronics </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DAGMC </tag>
            
            <tag> PyNE </tag>
            
            <tag> Trelis </tag>
            
            <tag> R2S </tag>
            
            <tag> shutdown dose rate </tag>
            
            <tag> 停机计量 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于倾听的一些想法]]></title>
      <url>/life/life/why-listen/</url>
      <content type="html"><![CDATA[<p>以前为了想让自己的人际关系变得更好，交更多朋友，读过一些关于倾听的艺术的书。我学了一些倾听别人的皮毛技巧，比如不打断别人的话，不要去指导别人怎么做，不要用自己的经历去佐证或是反驳地方等等。我需要做的只是认认真真的聆听，做一个倾听者，做一些简单的反馈告诉地方我在认真的听就够了。</p>
<p>但我现在觉得单纯做一个倾听者并没有意义。因为每个人都只在乎自己的想法，只在乎自己的感受。我们希望别人理解自己，其实更多的是希望对方做出符合自己想法的事情，或者说至少尊重自己的想法，不去阻碍自己。</p>
<p>没有人真正在乎另一个人的内心想法，即便是恋人这种亲密关系也不一定。我生活中实际发生的故事验证了这一点。我现在独自一人在外学习，和女朋友异国。虽然每天都会在电话或视频里聊不少东西，但我依然感觉到孤独感。<br>今天我们聊到了这个话题，有了下面的对话：</p>
<p><em>我：我有这种孤独的感觉，自己一个人的时候会想各种东西，有时心里很乱，想找个人述说，但却没有人听。</em></p>
<p><em>女朋友：你可以跟我说啊，我愿意听。</em></p>
<p><em>我：可是我说我内心感受的时候，你时不时就打断我，或者指导我该怎么做，或者就着话题扯到别的事情上，根本没有让我说完话。</em></p>
<p><em>女朋友：好像是哦，对不起</em></p>
<p><em>我：哎，其实我也一样，你说你的事情的时候，我也经常心不在焉，做别的事了，只是简单的嗯嗯啊哦的回应一下。就像你之前告诉我你知乎专栏上有两篇文章，但我连题目都没看。我告诉你我在写博客，让你点进来看一下，你也就点了一下，没有认真读内容。</em></p>
<p><em>女朋友：嗯，的确是，我就点了标题粗略看了下。</em></p>
<p><em>我：我们是男女朋友之间都这样，那跟其他人估计更别提了。</em></p>
<p>我和我的女朋友都承认自己并没有真正的关心对方的内心想法与感受，但我们还是在倾听。</p>
<p>我想起一个故事：邹忌讽齐王纳谏。“吾妻之美我者，私我也；妾之美我者，畏我也；客之美我者，欲有求于我也”。大家都爱听自己喜欢的话，爱听符合自己利益的意见。</p>
<p>我为什么要聆听别人的想法呢？我和其他人一样，并不真正关心另一个人的感受，我需要把聆听当作一种手段，从其他人那里获取信息，做到知己知彼，用来包装对自己有利的建议。</p>
<p>为什么别人会听我的呢？不，不会，别人不会听我的，别人听的是符合他们想法利益的事情。不符合他们利益的话，那些他们不想听的话，他们一句也听不进去。我要做的不过是把对我有利的事情中对他们也有利的那些关键点整理出来告他们，那些是他们愿意听的东西。双赢。</p>
<p>同时，我也应该像邹忌那样审视我所听到的一切。由此观之，能真诚相待的人，这一辈子估计遇不到多少个，每一个多应该珍惜。而且二十岁以后遇到的朋友里面，怕是很难出现真诚相待的人了。</p>
]]></content>
      
        <categories>
            
            <category> life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> listening </tag>
            
            <tag> 倾听 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[日语动词变形学习]]></title>
      <url>/Japanese/Japanese/verb-conjugation/</url>
      <content type="html"><![CDATA[<p>因为很喜欢日语动漫，所以我现在在学习日语。网上找了一些日语入门的攻略，觉得这篇<a href="你有什么相见恨晚的日语学习方法？ - Hayami的回答 - 知乎
https://www.zhihu.com/question/26939890/answer/36393970">大神的日语学习方法，10天入门，2个月达到N3水平，7个月突破N1，颠覆了我学习语言的思维</a>写的很好，我非常认同里面的内容。因此我也正在按照这个攻略进行入门阶段的学习，现在正学习到新编日语初级下册。学习的重点是掌握日语动词的变形。</p>
<p>这两天刚刚学习到动词的使役被动态，算是基本接触到了日语动词所有的变形了。在巩固学习日语动词变形的过程中，又发现了一些其他的很好的资源。</p>
<ol>
<li><p>日语老师宵寒在其知乎日语学习专栏中发表的文章<a href="https://zhuanlan.zhihu.com/p/23853643" target="_blank" rel="noopener">巴拉拉变身！！！史上最全日语动词变形大汇总</a>中总结了日语的各种变形的规律。<br><img src="https://pic2.zhimg.com/v2-026133e770956e146eb0a07e9dd46f0b_r.jpg" alt="日语变形树形图"></p>
</li>
<li><p>李特务在知乎的<a href="你有什么相见恨晚的日语学习方法？ - 李特务的回答 - 知乎
https://www.zhihu.com/question/26939890/answer/34763273">回答</a>中给出的一张动词或用练习表格：<img src="https://pic4.zhimg.com/8a902b350a7b819c1b9eb9647d130e06_r.jpg" alt="动词活用练习表格"></p>
</li>
</ol>
<p>我之前也想按照表格的形式来练习日语动词变形，但是发现这样有一些缺点：</p>
<ol>
<li>表格的连续性导致，在一列中不需要怎么动脑，按五十音图朝下读就出来了，动词变形效果不佳</li>
<li>检查答案不方便，自己错了都不容易发现</li>
<li>练习到的动词有限。对表上的这些动词的确是非常熟悉了，但是碰到不在表格内的动词就比较慌。最不好的是，碰到表格外的动词，变形前居然会先联想到对应的表格内的动词，用表格内动词的变形规律，再去对应到表格外动词的变形。这无疑大大降低了变形的速度</li>
<li>动词的联系频率不变。对自己常出错的单词和变形形式应该通过增加联系次数来巩固，而对于已经掌握的动词变形形式，就应该降低练习次数。使用表格练习法，显然无法做到动态的调整动词变形练习次数。</li>
</ol>
<p>因此，我自己写了一个练习动词变形的<a href="https://github.com/zxkjack123/JapaneseVerbPractice" target="_blank" rel="noopener">小软件</a>。<br>这个小软件实现的功能是：随机生成一些动词练习的题目，由练习者输入答案，并反馈和记录练习结果。<br>小软件具备以下特性：</p>
<ol>
<li>可以自己定义想练习的动词。比如只练习新标日初级上的动词</li>
<li>可以自己定义想联系的变形形式。比如只练习ます形，て形和た形。（在Japanese_verb_form.jvp中指定即可)</li>
<li>错误的及时反馈。你输错答案的话，它立马告诉你你错了，并会告诉你正确答案。</li>
<li>动态调整动词变形练习频率。对于你犯错的动词变形，它在以后出现的概率会大大增加。对于你出错的动词变形，它在以后出现的频率会降低。</li>
</ol>
<p>在练习动词变形的时候，我经常把可能态和假定形搞混，被动和使役搞混。因此我觉得有必要再找找方法让这些变形规律更好记忆一些。<br>先总结一个动词变形涉及到的表格(て形和た形规律不同）：</p>
<table>
<thead>
<tr>
<th style="text-align:center">あ</th>
<th style="text-align:center">い</th>
<th style="text-align:center">う</th>
<th style="text-align:center">え</th>
<th style="text-align:center">お</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">ない形</td>
<td style="text-align:center">ます形</td>
<td style="text-align:center">字典形</td>
<td style="text-align:center">命令形</td>
<td style="text-align:center">意志形</td>
</tr>
<tr>
<td style="text-align:center">被动态</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">假定形</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">使役态</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">可能态</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">使役被动态</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> Japanese </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Japanese </tag>
            
            <tag> 日语 </tag>
            
            <tag> 日本語 </tag>
            
            <tag> verb </tag>
            
            <tag> 动词 </tag>
            
            <tag> 動詞 </tag>
            
            <tag> conjugation </tag>
            
            <tag> 变形 </tag>
            
            <tag> 活用 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安装DAGMC]]></title>
      <url>/neutronics/neutronics/dagmc-install/</url>
      <content type="html"><![CDATA[<h2 id="DAGMC简介"><a href="#DAGMC简介" class="headerlink" title="DAGMC简介"></a>DAGMC简介</h2><p><a href="https://svalinn.github.io/DAGMC/" target="_blank" rel="noopener">DAGMC</a>是Direct Accelerated Geometry Monte Carlo的缩写，如其名字所示，DAGMC设计了一套方便高效的几何手段，用于蒙特卡罗方法的计算。DAGMC已经有了与MCNP5, MCNP6, Geant4, FLUKA, Tripoli4和Shift结合的相应工具。即使用DAGMC的几何处理部分，配合其他工具的物理计算部分代码，实现蒙特卡罗计算。</p>
<h2 id="DAGMC依赖软件安装"><a href="#DAGMC依赖软件安装" class="headerlink" title="DAGMC依赖软件安装"></a>DAGMC依赖软件安装</h2><p>DAGMC可以用来和PyNE配合来进行停机剂量计算工作。但是，现在PyNE最高支持MOAB 4.9.1 版，然而DAGMC需要使用MOAB 5.0版。也就是说，使用DAGMC的PyNE开发者需要在电脑上同时安装MOAB 4.9.1 和5.0版本。必须分别安装并设定，使用时还需要指定所使用库的路径。PyNE的安装可以参考<a href="https://zxkjack123.github.io/2018/01/27/neutronics/pyne-developer-install/">PyNE的开发版本安装</a>。DAGMC的安装可以参考<a href="https://svalinn.github.io/DAGMC/install/index.html" target="_blank" rel="noopener">官方安装指导</a>。但是官方指导的安装步骤存在几个缺点：</p>
<ol>
<li>对于HDF5的安装和库的使用有一处会出现找不到hdf5的情况</li>
<li>虽然说明了需要安装MOAB5.0,但并没有明确的和MOAB4.9.1做区分，导致使用PyNE的人会面临困扰</li>
<li>部分系统上，如Ubuntu 16.04，安装MOAB时会出现bug，暂时需要手动解决</li>
</ol>
<p>我也正在梳理适合我实际的安装流程，同时争取把官方安装指导完善一下。不过由于PyNE和DAGMC都还在不断的开发和完善过程中，将来对于MOAB的配置问题如果得到解决，那么整个安装流程就又会发生改变。安装流程需要与时俱进。</p>
<h3 id="安装HDF5"><a href="#安装HDF5" class="headerlink" title="安装HDF5"></a>安装HDF5</h3><p>电脑中可能已经安装了HDF5了，我们可以通过下面的命令来检查它的版本：</p>
<pre><code class="bash">dpkg -s libhdf5-dev
</code></pre>
<p>如果没有安装的话，通过下面的命令安装：</p>
<pre><code class="bash">sudo apt-get install hdf5-dev
</code></pre>
<h3 id="安装MOAB5-0"><a href="#安装MOAB5-0" class="headerlink" title="安装MOAB5.0"></a>安装MOAB5.0</h3><p>假定我们将MOAB5.0安装在$HOME/opt/MOAB5.0下，按照以下步骤进行安装。</p>
<h4 id="获取源代码"><a href="#获取源代码" class="headerlink" title="获取源代码"></a>获取源代码</h4><pre><code class="bash"># 下载源代码
cd ~/opt
mkdir MOAB5.0
cd MOAB5.0
git clone https://bitbucket.org/fathomteam/moab
cd moab
git checkout Version5.0
autoreconf -fi
cd ..
ln -s moab src
</code></pre>
<h4 id="配置安装"><a href="#配置安装" class="headerlink" title="配置安装"></a>配置安装</h4><pre><code>mkdir bld
cd bld
export MOAB_DIR=$HOME/opt/MOAB5.0
../src/configure --enable-optimize \
                   --enable-shared \
                   --disable-debug \
                   --with-hdf5=/usr/lib/x86_64-linux-gnu/hdf5/serial \
                   --prefix=$MOAB_DIR
make
</code></pre><p>目前由于MOAB的配置文件存在bug,执行到这一步时，会出现下面的报错：</p>
<pre><code>../../src/src/moab/Matrix3.hpp:62:2: error: #error Need either Eigen3 or BLAS/LAPACK libraries
</code></pre><p>解决方法：</p>
<pre><code class="bash">cd $MOAB_DIR/src/src/moab
</code></pre>
<p>打开<strong>Matrix3.hpp</strong>,找到下面的一段内容：</p>
<pre><code class="hpp">// We will rely on LAPACK directly
#ifndef MOAB_HAVE_LAPACK
#error Need either Eigen3 or BLAS/LAPACK libraries
#endif
</code></pre>
<p>将<strong>#error Need either Eigen3 or BLAS/LAPACK libraries</strong>注释掉：</p>
<pre><code class="hpp">// We will rely on LAPACK directly
#ifndef MOAB_HAVE_LAPACK
//#error Need either Eigen3 or BLAS/LAPACK libraries
#endif
</code></pre>
<p>然后清空bld文件家下的所有内容，重新配置安装：</p>
<pre><code class="bash">cd $MOAB_DIR/bld
rm -rf ./*
../src/configure --enable-optimize \
                   --enable-shared \
                   --disable-debug \
                   --with-hdf5=/usr/lib/x86_64-linux-gnu/hdf5/serial \
                   --prefix=$MOAB_DIR
make
make check
make install
</code></pre>
<p>至此，我们完成了MOAB5.0的安装，但是要调用它，必须让系统能够找到相关的文件。由于系统中可能同时安装了MOAB4.9.1和MOAB5.0，因此我们需要设置好MOAB的路径。</p>
<h4 id="路径设置"><a href="#路径设置" class="headerlink" title="路径设置"></a>路径设置</h4><p>MOAB路径配置,将下面的内容拷贝至~/.bashrc文件：</p>
<pre><code># MOAB
export MOAB_DIR=$HOME/opt/MOAB5.0
#export MOAB_DIR=$HOME/opt/MOAB4.9.1
export PATH=$PATH:$MOAB_DIR/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$MOAB_DIR/lib
export LIBRARY_PATH=$LIBRARY_PATH:$MOAB_DIR/lib
export CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:$MOAB_DIR/include
export C_INCLUDE_PATH=$C_INCLUDE_PATH:$MOAB_DIR/include
</code></pre><p>这样，当需要使用DAGMC的时候，将~/.bashrc中的MOAB4.9.1路径注释掉，保留MOAB5.0，然后打开一个新的terminal（刷新~/.bashrc设置），新terminal中MOAB便是MOAB5.0。</p>
<pre><code>export MOAB_DIR=$HOME/opt/MOAB5.0
#export MOAB_DIR=$HOME/opt/MOAB4.9.1
</code></pre><p>当需要使用PyNE的时候，将~/.bashrc中的MOAB5.0注释掉，保留MOAB4.9.1，然后打开一个新的terminal，新的terminal中MOAB便是MOAB4.9.1。</p>
<pre><code>#export MOAB_DIR=$HOME/opt/MOAB5.0
export MOAB_DIR=$HOME/opt/MOAB4.9.1
</code></pre><h2 id="安装DAGMC"><a href="#安装DAGMC" class="headerlink" title="安装DAGMC"></a>安装DAGMC</h2><p>完成HDF5和MOAB5.0的安装后，我们可以安装DAGMC了。</p>
<p>假设我们要把DAGMC安装在$HOME/opt/DAGMC文件夹下，可以按照下面的步骤进行。</p>
<h3 id="获取DAGMC源代码"><a href="#获取DAGMC源代码" class="headerlink" title="获取DAGMC源代码"></a>获取DAGMC源代码</h3><pre><code class="bash">cd $HOME/opt
mkdir DAGMC
cd DAGMC
git clone https://github.com/svalinn/DAGMC
# 此处会在DAGMC文件夹下再生成一个DAGMC文件夹-&gt; DAGMC/DAGMC
cd DAGMC
git checkout develop
</code></pre>
<h3 id="安装DAGMC-1"><a href="#安装DAGMC-1" class="headerlink" title="安装DAGMC"></a>安装DAGMC</h3><p><strong>这个步骤需要相应的物理计算部分的源代码</strong>。请参考<a href="https://svalinn.github.io/DAGMC/install/dagmc.html" target="_blank" rel="noopener">官方文档</a>选择相应版本执行后续安装步骤。<br>下面以安装DAG-MCNP v1.xx为例说明安装过程</p>
<h4 id="patch"><a href="#patch" class="headerlink" title="patch"></a>patch</h4><pre><code class="bash">cd mcnp/mcnp5
cp -r &lt;path_to_dvd&gt;/MCNP5/Source .
chmod -R u+rw Source
patch -p0 &lt; patch/dagmc.5.1.xx.patch
</code></pre>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><pre><code class="bash">cd $HOME/opt/DAGMC/DAGMC
mkdir bld
cd bld
cmake ../. -DBUILD_MCNP5=ON -DMPI_BUILD=ON -DCMAKE_INSTALL_PREFIX=$HOME/opt/DAGMC -DHDF5_LIBRARIES=/usr/lib/x86_64-linux-gnu/hdf5/serial/lib -DHDF5_INCLUDE_DIRS=/usr/lib/x86_64-linux-gnu/hdf5/serial/include -DMCNP5_DATAPATH=$HOME/opt/MCNPDATA
make
make install
</code></pre>
<h4 id="添加路径到-bashrc"><a href="#添加路径到-bashrc" class="headerlink" title="添加路径到~/.bashrc"></a>添加路径到~/.bashrc</h4><pre><code>export PATH=$PATH:$HOME/opt/DAGMC/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/DAGMC/lib
</code></pre>]]></content>
      
        <categories>
            
            <category> neutronics </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DAGMC </tag>
            
            <tag> install </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[跳槽是最好的涨薪方式？]]></title>
      <url>/career/career/get-higher-salary/</url>
      <content type="html"><![CDATA[<p>最近几年经常听说在一个企业干了几年的老员工工资还不如新入职的员工。Sean Ye在他的知乎专栏<a href="https://zhuanlan.zhihu.com/p/32894248" target="_blank" rel="noopener">年终涨薪的水，到底有多深</a>中将了这种现象形成的原因，也将到了对于那些认为自己应该获得更高工资的人的一个策略：跳槽。去外部寻求更好的机会，让自己获得市场价的工资。</p>
<p>我个人非常认同Sean Ye的观点。我本身就比较喜欢每隔一段时间换一个地方，而这也正好能够满足涨薪的需求。</p>
<p>但同时也还有一个担忧：跳槽对于涨薪的确是良方，但对于升职和长久的职业发展是否有利？这个还需要我进行多方面的思考。</p>
<p>感谢<a href="https://www.zhihu.com/people/sean-yenan/activities" target="_blank" rel="noopener">Sean Ye</a>的专栏。下面是Sean Ye的专栏和公众号信息：<br><img src="https://pic2.zhimg.com/80/v2-6638ae55d17d9680b3a6cba9e6dbebd5_hd.jpg" alt="Sean Ye"></p>
]]></content>
      
        <categories>
            
            <category> career </category>
            
        </categories>
        
        
        <tags>
            
            <tag> salary increase </tag>
            
            <tag> 涨薪 </tag>
            
            <tag> change jobs </tag>
            
            <tag> 跳槽 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我的需求层次与努力方向]]></title>
      <url>/life/life/essential-skill/</url>
      <content type="html"><![CDATA[<p>以前上大学的时候，有上过职业规划之类的课，政治课上也有讨论过人生规划之类的问题，不过当时根本没有认真思考过这个问题，只想着老师快点下课。 </p>
<p>最近到国外访学中，每天有5个小时以上的时间是独处的，反而开始想这些问题。我想要一个怎么的人生，我该怎样去实现它？</p>
<p>经济基础决定上层建筑。我在社会上处在什么位置，现阶段我人生的主要矛盾是什么？我该怎么样更上一层？<a href="https://zh.wikipedia.org/wiki/%E9%9C%80%E6%B1%82%E5%B1%82%E6%AC%A1%E7%90%86%E8%AE%BA" target="_blank" rel="noopener">马斯洛需求层次理论</a>是一个常用来描述这个问题的理论。我觉得这个理论用在我身上也很合适。</p>
<p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/Maslows-hierarchy-of-needs-zh.svg/512px-Maslows-hierarchy-of-needs-zh.svg.png" alt="马斯洛需求层次理论"></p>
<p>我现在不需要为<strong>生理需求</strong>层面的食物，水，空气和睡眠而操心。我担心最多的是：</p>
<ol>
<li>毕业了找不到好工作，工资不高怎么办</li>
<li>买不起房子结不起婚怎么办</li>
<li>即便结婚了，养不起孩子怎么办</li>
</ol>
<p>这些担忧的核心，也可以归结为一个方面：<strong>能否找到一个工资较高，福利待遇好的工作</strong>。这个工作必须要能够提供比较高的薪水。如果这个工作能够同时兼顾社交需求，尊重需求和自我实现需求，就更好了。</p>
<p>对我而言，要找到这样的工作，必须要具备一些核心技能，增加自己的不可替代性。这些技能需要具备以下特征：</p>
<ol>
<li>能够增加自己的工作机会</li>
<li>能够持续发展，终身学习的技能</li>
<li>有门槛，上限高，水平不同是能够比较容易区分</li>
<li>我必须掌握的好。</li>
</ol>
<p>这些技能还要能够持续发展。我的专业是核能科学与工程，但平时主要做的是模拟计算和数据处理与分析。对于我而言，在核能领域或是数据分析领域是最合适的工作领域。应该至少把这两个作为核心技能，同时，其他我能想到的重要的技能也需要发展。</p>
<ol>
<li>核能专业的知识与技能</li>
<li>数据分析的编程能力,重点发展：Python与C++</li>
<li>语言能力，英语需要进一步提升，再学习一门日语</li>
</ol>
]]></content>
      
        <categories>
            
            <category> life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> needs </tag>
            
            <tag> 需求 </tag>
            
            <tag> hierarchy </tag>
            
            <tag> 层次 </tag>
            
            <tag> 核心技能 </tag>
            
            <tag> essential skill </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Thunderbird接收常用邮箱设置]]></title>
      <url>/ubuntu/ubuntu/thunderbird-set/</url>
      <content type="html"><![CDATA[<h2 id="163邮箱"><a href="#163邮箱" class="headerlink" title="163邮箱"></a>163邮箱</h2><p>Thunderbird接收163免费邮箱设置：</p>
<table>
<thead>
<tr>
<th style="text-align:center">服务器名称</th>
<th style="text-align:center">服务器地址</th>
<th style="text-align:center">SSL协议端口号</th>
<th style="text-align:center">非SSL协议端口号</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">IMAP</td>
<td style="text-align:center">imap.163.com</td>
<td style="text-align:center">993</td>
<td style="text-align:center">143</td>
</tr>
<tr>
<td style="text-align:center">SMTP</td>
<td style="text-align:center">smtp.163.com</td>
<td style="text-align:center">465/994</td>
<td style="text-align:center">25</td>
</tr>
<tr>
<td style="text-align:center">POP3</td>
<td style="text-align:center">pop.163.com</td>
<td style="text-align:center">995</td>
<td style="text-align:center">110</td>
</tr>
</tbody>
</table>
<p>163免费邮客户端设置的POP3、SMTP、IMAP设置<a href="http://help.163.com/09/1223/14/5R7P3QI100753VB8.html" target="_blank" rel="noopener">参考链接</a>。</p>
<h2 id="中科院邮箱"><a href="#中科院邮箱" class="headerlink" title="中科院邮箱"></a>中科院邮箱</h2><p>Thunderbird接收中科院系统邮箱设置：</p>
<table>
<thead>
<tr>
<th style="text-align:center">服务器名称</th>
<th style="text-align:center">服务器地址</th>
<th style="text-align:center">安全链接</th>
<th style="text-align:center">端口</th>
<th style="text-align:center">验证方式</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">IMAP</td>
<td style="text-align:center">imap.cstnet.cn</td>
<td style="text-align:center">None</td>
<td style="text-align:center">143</td>
<td style="text-align:center">用户名与密码</td>
</tr>
<tr>
<td style="text-align:center">SMTP</td>
<td style="text-align:center">smtp.cstnet.cn</td>
<td style="text-align:center">None</td>
<td style="text-align:center">25</td>
<td style="text-align:center">用户名与密码</td>
</tr>
</tbody>
</table>
<p><a href="http://help.cstnet.cn/changjianwenti/youjianshoufa/Mozilla%20Thunderbird%20imap.html" target="_blank" rel="noopener">参考链接</a></p>
<h2 id="中科大学生邮箱"><a href="#中科大学生邮箱" class="headerlink" title="中科大学生邮箱"></a>中科大学生邮箱</h2><p>Thunderbird接收中科大学生邮箱设置：</p>
<table>
<thead>
<tr>
<th style="text-align:center">服务器名称</th>
<th style="text-align:center">服务器地址</th>
<th style="text-align:center">加密方式</th>
<th style="text-align:center">端口</th>
<th style="text-align:center">Clear text</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">IMAP</td>
<td style="text-align:center">mail.ustc.edu.cn</td>
<td style="text-align:center">SSL</td>
<td style="text-align:center">993</td>
<td style="text-align:center">143</td>
</tr>
<tr>
<td style="text-align:center">SMTP</td>
<td style="text-align:center">mail.ustc.edu.cn</td>
<td style="text-align:center">SSL</td>
<td style="text-align:center">465</td>
<td style="text-align:center">25</td>
</tr>
<tr>
<td style="text-align:center">POP</td>
<td style="text-align:center">mail.ustc.edu.cn</td>
<td style="text-align:center">SSL</td>
<td style="text-align:center">995</td>
<td style="text-align:center">110</td>
</tr>
</tbody>
</table>
<p><a href="http://mail.ustc.edu.cn/coremail/help/index.jsp" target="_blank" rel="noopener">参考链接</a></p>
]]></content>
      
        <categories>
            
            <category> ubuntu </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> thunderbird </tag>
            
            <tag> email </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安装PyNE的开发版本]]></title>
      <url>/neutronics/neutronics/pyne-developer-install/</url>
      <content type="html"><![CDATA[<h2 id="PyNE简介"><a href="#PyNE简介" class="headerlink" title="PyNE简介"></a>PyNE简介</h2><p><a href="http://pyne.io/" target="_blank" rel="noopener">PyNE</a> 是一系列计算核工程领域的工具组成的一个系统工具平台。</p>
<p>我是用PyNE配合DAGMC来进行停机剂量计算工作。现在正在进行一部分的改进工作，需要添加一部分代码，因此需要安装PyNE的开发版本。</p>
<h2 id="Ubuntu-16-04系统下安装PyNE开发者版本"><a href="#Ubuntu-16-04系统下安装PyNE开发者版本" class="headerlink" title="Ubuntu 16.04系统下安装PyNE开发者版本"></a>Ubuntu 16.04系统下安装PyNE开发者版本</h2><p>前段时间，我的系统因为一次partial upgrade而崩溃，所有工具都需要重新装。很多工具安装起来都很麻烦，会遇到各种各种的问题，所以借此机会把整个流程梳理一下，记录在这份文档中，方便以后再遇到类似情况，可以比较快捷的重装PyNE。</p>
<p>PyNE已经写了针对不同系统使用的<a href="https://github.com/pyne/install_scripts" target="_blank" rel="noopener">安装脚本</a>。比如我是Ubuntu 16.04的系统，就使用<code>ubuntu_16.04.sh</code>。在安装过程中,还会自动安装所依赖的软件。</p>
<p>但是，这个安装脚步是针对使用着的，对于开发者，尤其是需要使用DAGMC的开发者，不能直接使用这个脚本。</p>
<p>另外，现在PyNE最高支持MOAB 4.9.1 版，然而DAGMC需要使用MOAB 5.0版。也就是说，使用DAGMC的PyNE开发者需要在电脑上同时安装MOAB 4.9.1 和5.0版本。必须分别安装并设定，使用时还需要指定所使用库的路径。</p>
<h3 id="安装依赖软件"><a href="#安装依赖软件" class="headerlink" title="安装依赖软件"></a>安装依赖软件</h3><p>在<a href="https://github.com/pyne/install_scripts" target="_blank" rel="noopener">pyne/install_scripts</a>下找到<a href="https://github.com/pyne/install_scripts/blob/master/ubuntu_16.04.sh" target="_blank" rel="noopener"><strong>ubuntu_16.04.sh</strong></a>这个文件，其中的<em>package_list</em>就是安装pyne前需要安装的工具。使用下面的命令安装这些软件：</p>
<pre><code class="bash">sudo apt-get install software-properties-common python-software-properties wget \
             build-essential python-numpy python-scipy cython \
             python-nose git cmake vim emacs gfortran libblas-dev \
             liblapack-dev libhdf5-dev gfortran python-tables  \
             python-matplotlib python-jinja2 autoconf libtool
</code></pre>
<h3 id="安装MOAB4-9-1"><a href="#安装MOAB4-9-1" class="headerlink" title="安装MOAB4.9.1"></a>安装MOAB4.9.1</h3><p>按照下面的命令安装MOAB4.9.1（下面的命令将把MOAB4.9.1安装在<strong>$HOME/opt/MOAB4.9.1</strong>，如果要换文件家，改掉export MOAB_DIR的命令即可)。</p>
<pre><code class="bash">cd $HOME/opt
mkdir MOAB4.9.1
cd MOAB4.9.1
export MOAB_DIR=$HOME/opt/MOAB4.9.1
git clone --branch Version4.9.1 --single-branch https://bitbucket.org/fathomteam/moab moab-repo
cd moab-repo
autoreconf -fi
mkdir -p build
cd build
../configure --enable-shared --enable-dagmc --with-hdf5=/usr/lib/x86_64-linux-gnu/hdf5/serial --prefix=$MOAB_DIR
make
make install
echo &quot;export LD_LIBRARY_PATH=$MOAB_DIR/lib:\$LD_LIBRARY_PATH&quot; &gt;&gt; ~/.bashrc
echo &quot;export LIBRARY_PATH=$MOAB_DIR/lib:\$LIBRARY_PATH&quot; &gt;&gt; ~/.bashrc
echo &quot;export CPLUS_INCLUDE_PATH=$MOAB_DIR/include:\$CPLUS_INCLUDE_PATH&quot; &gt;&gt; ~/.bashrc
echo &quot;export C_INCLUDE_PATH=$MOAB_DIR/include:\$C_INCLUDE_PATH&quot; &gt;&gt; ~/.bashrc
source ~/.bashrc
</code></pre>
<h3 id="安装pytaps"><a href="#安装pytaps" class="headerlink" title="安装pytaps"></a>安装pytaps</h3><p>安装下面命令将pytaps安装在$HOME/opt文件夹下：</p>
<pre><code class="bash">cd $install_dir
wget https://pypi.python.org/packages/source/P/PyTAPS/PyTAPS-1.4.tar.gz
tar zxvf PyTAPS-1.4.tar.gz
rm PyTAPS-1.4.tar.gz
cd PyTAPS-1.4/
# export MOAB_DIR=$HOME/MOAB4.9.1
python setup.py --iMesh-path=$MOAB_DIR --without-iRel --without-iGeom install --user
</code></pre>
<h3 id="安装PyNE"><a href="#安装PyNE" class="headerlink" title="安装PyNE"></a>安装PyNE</h3><pre><code class="bash"># export MOAB_DIR=$HOME/opt/MOAB4.9.1
python setup.py install --user --hdf5=/usr/lib/x86_64-linux-gnu/hdf5/serial/ -DMOAB_LIBRARY=$MOAB_DIR/lib/libMOAB.so -DMOAB_INCLUDE_DIR=$MOAB_DIR/include
echo &quot;export PATH=$HOME/.local/bin:\$PATH&quot; &gt;&gt; ~/.bashrc
echo &quot;export LD_LIBRARY_PATH=$HOME/.local/lib:\$LD_LIBRARY_PATH&quot; &gt;&gt; ~/.bashrc
</code></pre>
<h4 id="核数据"><a href="#核数据" class="headerlink" title="核数据"></a>核数据</h4><pre><code class="bash">./scripts/nuc_data_make
</code></pre>
<p>2018年1月26日执行该操作时出现除零错误，下周复现问题并提交issue.</p>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>PyNE在开发过程中，功能性函数都配置了unit test进入pyne/tests问价夹下：</p>
<pre><code class="bash">nosetests test_xxx
</code></pre>
<h2 id="重新编译安装PyNE"><a href="#重新编译安装PyNE" class="headerlink" title="重新编译安装PyNE"></a>重新编译安装PyNE</h2><p>当开发者对原代码进行修改后，在提交Pull Request前，必须对代码进行测试。此时需要重新编译PyNE，然后进行测试。在重新编译PyNE前，必须将原来的安装文件清除掉，再重新编译。为了方便操作，将下面两条命名写入~/.bashrc中：</p>
<pre><code class="bash">echo &quot;alias pyne_build=&#39;python setup.py install --user --hdf5=/usr/lib/x86_64-linux-gnu/hdf5/serial/ -DMOAB_LIBRARY=$MOAB_DIR/lib/libMOAB.so -DMOAB_INCLUDE_DIR=$MOAB_DIR/include&#39;&quot; &gt;&gt; ~/.bashrc
$ echo &quot;alias pyne_clean=&#39;rm -rf $HOME/opt/pyne/build/ $HOME/.local/lib/python2.7/site-packages/pyne* $HOME/.local/lib/libpyne.so $HOME/opt/pyne/build_nuc_data&#39;&quot;
# source ~/.bashrc
</code></pre>
<p>之后需要重新编译PyNE的时候，只需要执行下面的命令即可：</p>
<pre><code class="bash">pyne_clean
pyne_build
</code></pre>
]]></content>
      
        <categories>
            
            <category> neutronics </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PyNE </tag>
            
            <tag> neutronics </tag>
            
            <tag> developer </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[为什么写博客？为什么放到GitHub？]]></title>
      <url>/life/life/why-blog/</url>
      <content type="html"><![CDATA[<p>所有的记忆都会被时间冲淡，不论这件事情在当时是多么重要。</p>
<p>看过的书，里面的内容很快就忘了，只记得曾经看过某本书。思考过的事情，也只有在再次遇到类似的内容时才能想起自己曾经思考过，可是具体细节却已忘记。不记录下来，就会遗忘。</p>
<p>即便是记过的笔记，日后想翻看时，早已不知道放在哪里，更不论里面的内容。记录的东西如果没办法方便的查找和回顾，那也没有意义。</p>
<p>就连自己的过去，也会被自己忘记。</p>
<p>回忆自己小时候的样子，却只能想起零星的几件事情，而且对这些事情的记忆也回来越模糊。而且还有更可怕的事情，回忆以前，细节总是记不清的，然而总会下意识的“脑补”一些细节填充进去，一段时间后，我已无法分辨那些细节到底是否真实发生过。</p>
<p>另外，生活中我也时常会主动说一些谎言来掩护我当时的行为或言论。当有类似的情况需要撒谎时，为了保证谎言不被拆穿，我便会撒同样的慌，甚至杜撰出更多的细节来支撑这个谎言。以至于那个谎言已经几乎成为我过去的真实经历。</p>
<p>我已无法通过记忆来认识真实的自己了。因为真实的记忆被逐渐淡忘，下意识脑补出细节来补充，自己编纂出的谎言也混入记忆中。我的记忆慢慢的成为了我与外界交流的工具，可以用来和朋友吹逼，可以到知乎上分享故事，可以为自己的观点编造一些论据，也可以为自己的失败找一些理由。然而，它却没法再用来认识我自己。</p>
<p>我现在才二十来岁了，记忆仿佛已经不属于我自己。这让我感到害怕，有一种失去自我的感觉。我是怎样一步步发展成现在的我的？我想不起来的，而且越是思考这个问题，怕是又有更多的脑补细节填充到我的记忆中来了。我希望能有一个地方，能够记录下自己的轨迹，而且，即便被将来的我篡改了，也能留下清晰的痕迹。</p>
<p>用GitHub pages作为博客，可以记录下我每一个博客版本，正好满足我的需求。同时，这里也可以存放一些自己用得到的步骤比较复杂的东西的文档，是一个不错的博客工具。</p>
]]></content>
      
        <categories>
            
            <category> life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
            <tag> 生活 </tag>
            
            <tag> memory </tag>
            
            <tag> 记忆 </tag>
            
            <tag> past </tag>
            
            <tag> 过去 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[博客迁移计划]]></title>
      <url>/life/life/first-blog-move/</url>
      <content type="html"><![CDATA[<p>一直在寻找一种适合自己的博客写作方式，在<a href="https://zhuanlan.zhihu.com/p/22191919" target="_blank" rel="noopener">知乎</a>上发现了这个方式，Hexo + github的写作方式。于是决定用这个来作为我以后的博客写作方式。</p>
<p>以前的博客是在网易博客上写的，东西也不多，就几篇内容，这个博客还可以<a href="http://zxkjack123.blog.163.com/#m=0&amp;t=0" target="_blank" rel="noopener">访问</a>，不过不打算更新了。选择更换的原因有：</p>
<ul>
<li><p>用了几次网易的博客，内容看着还行，但是登陆页面真的很渣，登陆自己的博客都很麻烦</p>
</li>
<li><p>没有办法做到离线提交，离线写博客</p>
</li>
<li><p>对公式之类的东西支持太差，和LaTeX内容兼容太差</p>
</li>
<li><p>在GitHub上搭建博客，远程异地同步很方便，我用GitHub也越来越多，很方便 </p>
</li>
</ul>
<p>特别是最近发现的了<a href="https://github.com/Moeditor/Moeditor" target="_blank" rel="noopener">moeditor</a>这个神器，用这个来写Markdown的内容非常方便，体验极佳。</p>
<p>一直想要一种好看的，跨平台的，方便同步，对公式和图片支持比较好的博客写作方式。现在，我感觉我的平台已经有了，剩下的就是坚持用博客记录自己的生活和学习了。</p>
]]></content>
      
        <categories>
            
            <category> life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Chorme打开链接时在新窗口打开空白页问题]]></title>
      <url>/ubuntu/ubuntu/chrome-new-tab/</url>
      <content type="html"><![CDATA[<h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>我最近把自己的笔记本系统从Win10换到了Ubuntu 16.04。Chrome是我在Ubuntu系统上的默认浏览器。</p>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>安装Chrome完成打开之后使用都很正常，但就是有一个地方很蛋疼：<br>当你打开一个链接的时候，它会生成一个新的Chrome窗口(window)，然后在那个窗口显示的也是一个空白网页(tab)。</p>
<p>如果想让链接在原来已经打开的Chrome窗口中的一个新tab打开时，我必须使用以下操作：右击链接-&gt;拷贝链接地址-&gt;在空白网页粘贴链接</p>
<p>对于我这种经常需要从邮件里面打开链接的人来说，这种复杂的操作让我难以忍受。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>还好，国外已经有大佬帮我解决了这个<a href="https://askubuntu.com/questions/689449/external-links-are-opened-as-blank-tabs-in-new-browser-window-in-chrome" target="_blank" rel="noopener">问题</a>。</p>
<p>只需要打开</p>
<pre><code class="bash">$HOME/.local/share/applications/google-chrome.desktop
</code></pre>
<p>这个文件，<br>在</p>
<pre><code class="bash">Exec=/opt/google/chrome/chrome
</code></pre>
<p>这一行后面添加一个 <code>%U</code>再保存一下文件就OK了。</p>
<pre><code class="bash">Exec=/opt/google/chrome/chrome %U
</code></pre>
<p>我重装系统后又遇到了这个问题，结果忘了上次再哪而找的答案，结果又花了好久从找到。这次学聪明点，直接把答案搬运过来，翻译好，以后再遇到这个问题就不怕了。</p>
<p>我也遇到过要修改的那个文件名称不一致的情况，存在多个看着像那个文件但不是的文件。我索性直接把所有的相似的文件都加上了那个<code>%U</code>，这样问题解决。</p>
]]></content>
      
        <categories>
            
            <category> ubuntu </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> chrome </tag>
            
            <tag> tab </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我的Ubuntu装机必备软件]]></title>
      <url>/ubuntu/ubuntu/academic-tools/</url>
      <content type="html"><![CDATA[<h2 id="重装系统的恐怖回忆"><a href="#重装系统的恐怖回忆" class="headerlink" title="重装系统的恐怖回忆"></a>重装系统的恐怖回忆</h2><p>2017年的时候因为想在ubuntu上装个IE浏览器，然后网上找了一下，需要装个wine这个东西。然后一装，结果就把系统搞坏了，装任何软件或者卸载任何软件，都会莫名其妙的弹出一个窗口，告诉我在配置什么东西，下面一个“确定”按钮还点不了。<br>哎，我对ubuntu也不是特别熟，网上搜索了一下也没找到好的解决办法，心一横就把电脑重装系统了。</p>
<p>2018年1月23号，Ubuntu系统弹出提示，告诉我有更新，但是是什么partial update。心想着是系统提示的更新，就更新吧，确定，授权，更新，重启，整个流程都没有在意。然而当Boot Menu的开机页面蹦出来的时候，我傻眼了。什么鬼，进不去系统了！<br><img src="https://i.imgur.com/pZNBVCF.jpg" alt="开机页面"><br>我只能挥泪重装系统，好在最近的工作都同步在GitHub上，损失不大，只不过需要花点时间把东西都安装回来而已。</p>
<h2 id="额，具体要装哪些软件？"><a href="#额，具体要装哪些软件？" class="headerlink" title="额，具体要装哪些软件？"></a>额，具体要装哪些软件？</h2><p>在准备重装系统的时候，我意识到一个问题，我之前安装到底安装了哪些软件？</p>
<p>完了，我也记不清楚了。而且有些东西，安装之后又卸载，又装不同版本之类的，折腾来折腾去，压根不知道具体该装啥了。</p>
<p>只好凭借这回忆，把需要用的工具整理一番，将来万一系统又蹦了，也好用这个清单再一个个装回来。</p>
<ul>
<li>vim: 一个通用的文本编辑器。功能强大，配合各种插件，可以写各种代码。</li>
<li>Chrome: 浏览器，支持各种扩展应用和插件，比如google scholar插件，google dictionary插件，Todoist插件，Unblock boundary插件，Zotero插件，Ginger插件等。</li>
<li>Unblock boundary: 翻回国内看番剧的神器（需要购买会员），妈妈再也不用担心我在国外看不了bilibili了！</li>
<li>Lantern: 我一直用的科学上网利器。把~/.profile里面写上nohup /usr/bin/lantern &amp;，开机登陆就自动可以翻墙了，很方便。最近人在国外，暂时用不到。</li>
<li>Thunderbird: 收发邮件。即便是重装系统时本地文件全部清除后也不会丢失自己对邮件的处理记录，比如存档的邮件。点击<a href="https://zxkjack123.github.io/2018/01/25/ubuntu-thunderbird.html">这里</a>查看Thunderbird接收我常用邮箱的设置。</li>
<li>Mendeley: 科研文献管理软件，跨平台，能方便同步，能把文献生成bib文件，配合LaTeX写作很方便。不过最近已经转移到zotero了。</li>
<li>Zotero: 科研文献管理软件，跨平台，开源，方便同步。外导课题组使用zotero，我现在已经从mendeley切换到zotero了。</li>
<li>Tex live &amp; Texstudio: 很好用的LaTeX书写软件,配合GitHub保存一切书写记录和版本控制。LaTeX + GitHub写论文，版本控制很轻松，修改记录一直记录着。</li>
<li>kolourpaint4 &amp; Gimp: 画图用的。ubuntu平台没有adobe PS &amp; AI可用，可以用这两个替代用来处理简单的图形。</li>
<li>git:这个东西配合github，可以把其他各类代码放到github管理与同步，很方便。LaTeX文档(没错，论文也能)放上面。</li>
<li>pycharm: 写python代码用的。最近都用vim在写python代码，基本不怎么用了。</li>
</ul>
<p>下面是几个常用的工具：</p>
<ul>
<li><a href="https://convertio.co/zh/" target="_blank" rel="noopener">Convertio</a> 各种文件格式转换，写论文的时候用这个把图片转pdf,pdf转图片什么的。</li>
<li><a href="http://detexify.kirelabs.org/classify.html" target="_blank" rel="noopener">Detexify</a> LaTeX符合检测与转换。手画一个LaTeX符号，Detexify输出LaTeX代码，对那些都叫不出名字的符号，用这个比自己在列表里找方便多了</li>
<li><a href="http://linggle.com/" target="_blank" rel="noopener">Linggle</a> 写论文的时候时常纠结某个词用的对不对，这里是接to还是for，用a还是the还是不要。这些常用的搭配，用linggle的推荐基本就没错了，减少很多烦恼</li>
<li><a href="http://www.gingersoftware.com/" target="_blank" rel="noopener">Ginger</a> 身为中国人，对自己说的英语没自信，对自己写的英语也没自信。现在在国外访学，用这个工具来帮助检查自己的英语书写的语法错误，很方便。</li>
</ul>
<p>以后遇到其他给力的软件再放上来。</p>
]]></content>
      
        <categories>
            
            <category> ubuntu </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> software </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/uncategorized/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;
</code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server
</code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate
</code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy
</code></pre>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
